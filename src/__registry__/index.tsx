// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

// biome-ignore lint/suspicious/noExplicitAny: <explanation>
export const Index: Record<string, any> = {
	"jsx-renderer": {
		name: "jsx-renderer",
		description: "A component that renders JSX strings with access to tailwind, shadcn components and lucide icons.",
		type: "registry:ui",
		registryDependencies: ["http://localhost:4567/r/jsx-utils.json"],
		files: [{
			path: "src/registry/ui/jsx-renderer.tsx",
			type: "registry:ui",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/jsx-renderer.tsx")),
		source: "",
		meta: undefined,
    },	"chat-input": {
		name: "chat-input",
		description: "",
		type: "registry:ui",
		registryDependencies: ["textarea"],
		files: [{
			path: "src/registry/ui/chat-input.tsx",
			type: "registry:ui",
			target: ""
		},{
			path: "src/registry/hooks/use-textarea-resize.ts",
			type: "registry:hook",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/chat-input.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message-area": {
		name: "chat-message-area",
		description: "",
		type: "registry:ui",
		registryDependencies: ["scroll-area","button"],
		files: [{
			path: "src/registry/ui/chat-message-area.tsx",
			type: "registry:ui",
			target: ""
		},{
			path: "src/registry/hooks/use-scroll-to-bottom.ts",
			type: "registry:hook",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/chat-message-area.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message": {
		name: "chat-message",
		description: "",
		type: "registry:ui",
		registryDependencies: ["http://localhost:4567/r/markdown-content.json"],
		files: [{
			path: "src/registry/ui/chat-message.tsx",
			type: "registry:ui",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/chat-message.tsx")),
		source: "",
		meta: undefined,
    },	"markdown-content": {
		name: "markdown-content",
		description: "A markdown content component.",
		type: "registry:ui",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/ui/markdown-content.tsx",
			type: "registry:ui",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/markdown-content.tsx")),
		source: "",
		meta: undefined,
    },	"model-selector": {
		name: "model-selector",
		description: "",
		type: "registry:ui",
		registryDependencies: ["select"],
		files: [{
			path: "src/registry/ui/model-selector.tsx",
			type: "registry:ui",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/model-selector.tsx")),
		source: "",
		meta: undefined,
    },	"resizable-node": {
		name: "resizable-node",
		description: "",
		type: "registry:ui",
		registryDependencies: ["http://localhost:4567/r/base-node.json"],
		files: [{
			path: "src/registry/ui/flow/resizable-node.tsx",
			type: "registry:ui",
			target: "components/flow/resizable-node.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/resizable-node.tsx")),
		source: "",
		meta: undefined,
    },	"node-header-status": {
		name: "node-header-status",
		description: "",
		type: "registry:ui",
		registryDependencies: ["badge"],
		files: [{
			path: "src/registry/ui/flow/node-header-status.tsx",
			type: "registry:ui",
			target: "components/flow/node-header-status.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/node-header-status.tsx")),
		source: "",
		meta: undefined,
    },	"editable-handle": {
		name: "editable-handle",
		description: "",
		type: "registry:ui",
		registryDependencies: ["button","input","textarea","popover","http://localhost:4567/r/base-handle.json"],
		files: [{
			path: "src/registry/ui/flow/editable-handle.tsx",
			type: "registry:ui",
			target: "components/flow/editable-handle.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/editable-handle.tsx")),
		source: "",
		meta: undefined,
    },	"status-edge": {
		name: "status-edge",
		description: "",
		type: "registry:ui",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/ui/flow/status-edge.tsx",
			type: "registry:ui",
			target: "components/flow/status-edge.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/status-edge.tsx")),
		source: "",
		meta: undefined,
    },	"generate-text-node": {
		name: "generate-text-node",
		description: "",
		type: "registry:ui",
		registryDependencies: ["button","separator","http://localhost:4567/r/model-selector.json","http://localhost:4567/r/node-header-status.json","http://localhost:4567/r/editable-handle.json","http://localhost:4567/r/labeled-handle.json","http://localhost:4567/r/base-node.json","http://localhost:4567/r/node-header.json"],
		files: [{
			path: "src/registry/ui/flow/generate-text-node.tsx",
			type: "registry:ui",
			target: "components/flow/generate-text-node.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/generate-text-node.tsx")),
		source: "",
		meta: undefined,
    },	"prompt-crafter-node": {
		name: "prompt-crafter-node",
		description: "",
		type: "registry:ui",
		registryDependencies: ["button","separator","popover","command","http://localhost:4567/r/node-header-status.json","http://localhost:4567/r/editable-handle.json","http://localhost:4567/r/node-header.json","http://localhost:4567/r/labeled-handle.json","http://localhost:4567/r/base-node.json"],
		files: [{
			path: "src/registry/ui/flow/prompt-crafter-node.tsx",
			type: "registry:ui",
			target: "components/flow/prompt-crafter-node.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/prompt-crafter-node.tsx")),
		source: "",
		meta: undefined,
    },	"text-input-node": {
		name: "text-input-node",
		description: "",
		type: "registry:ui",
		registryDependencies: ["textarea","separator","http://localhost:4567/r/labeled-handle.json","http://localhost:4567/r/node-header.json","http://localhost:4567/r/resizable-node.json"],
		files: [{
			path: "src/registry/ui/flow/text-input-node.tsx",
			type: "registry:ui",
			target: "components/flow/text-input-node.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/text-input-node.tsx")),
		source: "",
		meta: undefined,
    },	"visualize-text-node": {
		name: "visualize-text-node",
		description: "",
		type: "registry:ui",
		registryDependencies: ["separator","http://localhost:4567/r/markdown-content.json","http://localhost:4567/r/labeled-handle.json","http://localhost:4567/r/node-header.json","http://localhost:4567/r/resizable-node.json"],
		files: [{
			path: "src/registry/ui/flow/visualize-text-node.tsx",
			type: "registry:ui",
			target: "components/flow/visualize-text-node.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/visualize-text-node.tsx")),
		source: "",
		meta: undefined,
    },	"base-handle": {
		name: "base-handle",
		description: "",
		type: "registry:ui",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/ui/flow/base-handle.tsx",
			type: "registry:ui",
			target: "components/flow/base-handle.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/base-handle.tsx")),
		source: "",
		meta: undefined,
    },	"labeled-handle": {
		name: "labeled-handle",
		description: "",
		type: "registry:ui",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/ui/flow/labeled-handle.tsx",
			type: "registry:ui",
			target: "components/flow/labeled-handle.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/labeled-handle.tsx")),
		source: "",
		meta: undefined,
    },	"base-node": {
		name: "base-node",
		description: "",
		type: "registry:ui",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/ui/flow/base-node.tsx",
			type: "registry:ui",
			target: "components/flow/base-node.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/base-node.tsx")),
		source: "",
		meta: undefined,
    },	"node-header": {
		name: "node-header",
		description: "",
		type: "registry:ui",
		registryDependencies: ["button","dropdown-menu"],
		files: [{
			path: "src/registry/ui/flow/node-header.tsx",
			type: "registry:ui",
			target: "components/flow/node-header.tsx"
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/ui/flow/node-header.tsx")),
		source: "",
		meta: undefined,
    },	"chat-demo": {
		name: "chat-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-demo.tsx")),
		source: "",
		meta: undefined,
    },	"chat-input-demo": {
		name: "chat-input-demo",
		description: "",
		type: "registry:example",
		registryDependencies: ["http://localhost:4567/r/chat-input.json"],
		files: [{
			path: "src/registry/examples/chat-input-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-input-demo.tsx")),
		source: "",
		meta: undefined,
    },	"chat-input-unstyled": {
		name: "chat-input-unstyled",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-input-unstyled.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-input-unstyled.tsx")),
		source: "",
		meta: undefined,
    },	"chat-input-unstyled-initial-rows": {
		name: "chat-input-unstyled-initial-rows",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-input-unstyled-initial-rows.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-input-unstyled-initial-rows.tsx")),
		source: "",
		meta: undefined,
    },	"markdown-content-demo": {
		name: "markdown-content-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/markdown-content-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/markdown-content-demo.tsx")),
		source: "",
		meta: undefined,
    },	"markdown-streaming-demo": {
		name: "markdown-streaming-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/markdown-streaming-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/markdown-streaming-demo.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message-demo": {
		name: "chat-message-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-message-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-message-demo.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message-demo-default": {
		name: "chat-message-demo-default",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-message-demo-default.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-message-demo-default.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message-demo-bubble": {
		name: "chat-message-demo-bubble",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-message-demo-bubble.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-message-demo-bubble.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message-demo-full": {
		name: "chat-message-demo-full",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-message-demo-full.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-message-demo-full.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message-demo-without-avatar": {
		name: "chat-message-demo-without-avatar",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-message-demo-without-avatar.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-message-demo-without-avatar.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message-demo-avatar-image": {
		name: "chat-message-demo-avatar-image",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-message-demo-avatar-image.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-message-demo-avatar-image.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message-demo-markdown-content": {
		name: "chat-message-demo-markdown-content",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-message-demo-markdown-content.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-message-demo-markdown-content.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message-area-demo": {
		name: "chat-message-area-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-message-area-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-message-area-demo.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message-area-demo-alignment": {
		name: "chat-message-area-demo-alignment",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-message-area-demo-alignment.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-message-area-demo-alignment.tsx")),
		source: "",
		meta: undefined,
    },	"chat-message-area-demo-streaming": {
		name: "chat-message-area-demo-streaming",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/chat-message-area-demo-streaming.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/chat-message-area-demo-streaming.tsx")),
		source: "",
		meta: undefined,
    },	"jsx-renderer-demo": {
		name: "jsx-renderer-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/jsx-renderer-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/jsx-renderer-demo.tsx")),
		source: "",
		meta: undefined,
    },	"model-selector-demo": {
		name: "model-selector-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/model-selector-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/model-selector-demo.tsx")),
		source: "",
		meta: undefined,
    },	"model-selector-disabled-demo": {
		name: "model-selector-disabled-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/model-selector-disabled-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/model-selector-disabled-demo.tsx")),
		source: "",
		meta: undefined,
    },	"resizable-node-demo": {
		name: "resizable-node-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/resizable-node-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/resizable-node-demo.tsx")),
		source: "",
		meta: undefined,
    },	"visualize-text-node-demo": {
		name: "visualize-text-node-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/visualize-text-node-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/visualize-text-node-demo.tsx")),
		source: "",
		meta: undefined,
    },	"prompt-crafter-node-demo": {
		name: "prompt-crafter-node-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/prompt-crafter-node-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/prompt-crafter-node-demo.tsx")),
		source: "",
		meta: undefined,
    },	"text-input-node-demo": {
		name: "text-input-node-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/text-input-node-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/text-input-node-demo.tsx")),
		source: "",
		meta: undefined,
    },	"generate-text-node-demo": {
		name: "generate-text-node-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/generate-text-node-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/generate-text-node-demo.tsx")),
		source: "",
		meta: undefined,
    },	"editable-handle-demo": {
		name: "editable-handle-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/editable-handle-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/editable-handle-demo.tsx")),
		source: "",
		meta: undefined,
    },	"status-edge-demo": {
		name: "status-edge-demo",
		description: "",
		type: "registry:example",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/examples/status-edge-demo.tsx",
			type: "registry:example",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/examples/status-edge-demo.tsx")),
		source: "",
		meta: undefined,
    },	"use-textarea-resize": {
		name: "use-textarea-resize",
		description: "",
		type: "registry:hook",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/hooks/use-textarea-resize.ts",
			type: "registry:hook",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/hooks/use-textarea-resize.ts")),
		source: "",
		meta: undefined,
    },	"use-scroll-to-bottom": {
		name: "use-scroll-to-bottom",
		description: "",
		type: "registry:hook",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/hooks/use-scroll-to-bottom.ts",
			type: "registry:hook",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/hooks/use-scroll-to-bottom.ts")),
		source: "",
		meta: undefined,
    },	"chat-01": {
		name: "chat-01",
		description: "A simple chat page.",
		type: "registry:block",
		registryDependencies: ["card","breadcrumb","separator","sidebar","tooltip","button","avatar","dropdown-menu","http://localhost:4567/r/chat-input.json","http://localhost:4567/r/chat-message-area.json","http://localhost:4567/r/chat-message.json"],
		files: [{
			path: "src/registry/blocks/chat-01/page.tsx",
			type: "registry:page",
			target: "app/chat/page.tsx"
		},{
			path: "src/registry/blocks/chat-01/route.ts",
			type: "registry:page",
			target: "app/api/ai/chat/route.ts"
		},{
			path: "src/registry/blocks/chat-01/components/chat.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/chat-01/components/sidebar-app.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/chat-01/components/nav-user.tsx",
			type: "registry:component",
			target: ""
		}],
		categories: ["chat"],
		component: React.lazy(() => import("@/registry/blocks/chat-01/page.tsx")),
		source: "src/__registry__/blocks/chat-01/page.tsx",
		meta: undefined,
    },	"chat-02": {
		name: "chat-02",
		description: "A chat in a sidebar.",
		type: "registry:block",
		registryDependencies: ["sidebar","breadcrumb","http://localhost:4567/r/chat-input.json","http://localhost:4567/r/chat-message-area.json","http://localhost:4567/r/chat-message.json"],
		files: [{
			path: "src/registry/blocks/chat-02/page.tsx",
			type: "registry:page",
			target: "app/chat/page.tsx"
		},{
			path: "src/registry/blocks/chat-02/route.ts",
			type: "registry:page",
			target: "app/api/ai/chat/route.ts"
		},{
			path: "src/registry/blocks/chat-02/components/app-sidebar.tsx",
			type: "registry:component",
			target: ""
		}],
		categories: ["chat"],
		component: React.lazy(() => import("@/registry/blocks/chat-02/page.tsx")),
		source: "src/__registry__/blocks/chat-02/page.tsx",
		meta: undefined,
    },	"chat-03": {
		name: "chat-03",
		description: "A chat in a popover.",
		type: "registry:block",
		registryDependencies: ["popover","button","http://localhost:4567/r/chat-input.json","http://localhost:4567/r/chat-message-area.json","http://localhost:4567/r/chat-message.json"],
		files: [{
			path: "src/registry/blocks/chat-03/page.tsx",
			type: "registry:page",
			target: "app/chat/page.tsx"
		},{
			path: "src/registry/blocks/chat-03/route.ts",
			type: "registry:page",
			target: "app/api/ai/chat/route.ts"
		},{
			path: "src/registry/blocks/chat-03/components/chat.tsx",
			type: "registry:component",
			target: ""
		}],
		categories: ["chat"],
		component: React.lazy(() => import("@/registry/blocks/chat-03/page.tsx")),
		source: "src/__registry__/blocks/chat-03/page.tsx",
		meta: undefined,
    },	"app-01": {
		name: "app-01",
		description: "A app with generative UI capabilities.",
		type: "registry:block",
		registryDependencies: ["avatar","input","label","tabs","resizable","breadcrumb","button","toggle-group","switch","separator","card","badge","dialog","slider","http://localhost:4567/r/chat-input.json","http://localhost:4567/r/chat-message-area.json","http://localhost:4567/r/chat-message.json","http://localhost:4567/r/jsx-renderer.json","http://localhost:4567/r/jsx-utils.json"],
		files: [{
			path: "src/registry/blocks/app-01/page.tsx",
			type: "registry:page",
			target: "app/generative-ui/page.tsx"
		},{
			path: "src/registry/blocks/app-01/canvas/page.tsx",
			type: "registry:page",
			target: "app/canvas/page.tsx"
		},{
			path: "src/registry/blocks/app-01/route.ts",
			type: "registry:page",
			target: "app/api/ai/generate/route.ts"
		},{
			path: "src/registry/blocks/app-01/hooks/generation-store.ts",
			type: "registry:hook",
			target: ""
		},{
			path: "src/registry/blocks/app-01/components/versions.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/app-01/components/editor-layout.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/app-01/components/editor-toolbar.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/app-01/components/code-editor.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/app-01/components/preview.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/app-01/components/chat-dialog.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/app-01/components/copy-button.tsx",
			type: "registry:component",
			target: ""
		}],
		categories: ["app"],
		component: React.lazy(() => import("@/registry/blocks/app-01/page.tsx")),
		source: "src/__registry__/blocks/app-01/page.tsx",
		meta: undefined,
    },	"app-02": {
		name: "app-02",
		description: "A persona generator app with structured outputs.",
		type: "registry:block",
		registryDependencies: ["dialog","button","input","textarea","label","scroll-area","form","skeleton","card","avatar"],
		files: [{
			path: "src/registry/blocks/app-02/page.tsx",
			type: "registry:page",
			target: "app/persona/page.tsx"
		},{
			path: "src/registry/blocks/app-02/route.ts",
			type: "registry:page",
			target: "app/api/ai/persona/route.ts"
		},{
			path: "src/registry/blocks/app-02/components/persona-display.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/app-02/lib/persona.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/blocks/app-02/lib/example-businesses.ts",
			type: "registry:lib",
			target: ""
		}],
		categories: ["app"],
		component: React.lazy(() => import("@/registry/blocks/app-02/page.tsx")),
		source: "src/__registry__/blocks/app-02/page.tsx",
		meta: undefined,
    },	"app-03": {
		name: "app-03",
		description: "An X profile bio generator app.",
		type: "registry:block",
		registryDependencies: ["button","dialog","input","textarea","form","label","select","skeleton","avatar"],
		files: [{
			path: "src/registry/blocks/app-03/page.tsx",
			type: "registry:page",
			target: "app/x-profile/page.tsx"
		},{
			path: "src/registry/blocks/app-03/layout.tsx",
			type: "registry:page",
			target: "app/x-profile/layout.tsx"
		},{
			path: "src/registry/blocks/app-03/route.ts",
			type: "registry:page",
			target: "app/api/ai/x-profile/route.ts"
		},{
			path: "src/registry/blocks/app-03/components/profile-generate-dialog.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/app-03/components/x-preview.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/app-03/components/toolbar.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/app-03/components/theme-toggle.tsx",
			type: "registry:component",
			target: ""
		},{
			path: "src/registry/blocks/app-03/lib/x.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/blocks/app-03/lib/profile-examples.ts",
			type: "registry:lib",
			target: ""
		}],
		categories: ["app"],
		component: React.lazy(() => import("@/registry/blocks/app-03/page.tsx")),
		source: "src/__registry__/blocks/app-03/page.tsx",
		meta: undefined,
    },	"flow-chain": {
		name: "flow-chain",
		description: "Agentic chain workflow.",
		type: "registry:block",
		registryDependencies: ["button","card","dialog","input","textarea","sonner","http://localhost:4567/r/generate-text-node.json","http://localhost:4567/r/prompt-crafter-node.json","http://localhost:4567/r/text-input-node.json","http://localhost:4567/r/visualize-text-node.json"],
		files: [{
			path: "src/registry/blocks/flow-chain/page.tsx",
			type: "registry:page",
			target: "app/workflow/page.tsx"
		},{
			path: "src/registry/blocks/flow-chain/route.ts",
			type: "registry:page",
			target: "app/api/workflow/execute/route.ts"
		},{
			path: "src/registry/blocks/flow-chain/components/nodes-panel.tsx",
			type: "registry:component",
			target: "components/flow/nodes-panel.tsx"
		},{
			path: "src/registry/blocks/flow-chain/lib/news-summarization-chain.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/ui/flow/status-edge-controller.tsx",
			type: "registry:component",
			target: "components/flow/status-edge-controller.tsx"
		},{
			path: "src/registry/ui/flow/visualize-text-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/visualize-text-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/text-input-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/text-input-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/prompt-crafter-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/prompt-crafter-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/generate-text-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/generate-text-node-controller.tsx"
		},{
			path: "src/registry/hooks/flow/use-workflow.ts",
			type: "registry:hook",
			target: ""
		},{
			path: "src/registry/lib/flow/workflow.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/workflow-execution-engine.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/sse-workflow-execution-client.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/sse-workflow-execution-engine.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/server-node-processors.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/node-factory.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/generate-ai-text.ts",
			type: "registry:lib",
			target: ""
		}],
		categories: ["flow"],
		component: React.lazy(() => import("@/registry/blocks/flow-chain/page.tsx")),
		source: "src/__registry__/blocks/flow-chain/page.tsx",
		meta: undefined,
    },	"flow-routing": {
		name: "flow-routing",
		description: "Agentic routing workflow.",
		type: "registry:block",
		registryDependencies: ["button","card","dialog","input","textarea","sonner","http://localhost:4567/r/generate-text-node.json","http://localhost:4567/r/prompt-crafter-node.json","http://localhost:4567/r/text-input-node.json","http://localhost:4567/r/visualize-text-node.json"],
		files: [{
			path: "src/registry/blocks/flow-routing/page.tsx",
			type: "registry:page",
			target: "app/workflow/page.tsx"
		},{
			path: "src/registry/blocks/flow-routing/route.ts",
			type: "registry:page",
			target: "app/api/workflow/execute/route.ts"
		},{
			path: "src/registry/blocks/flow-routing/components/nodes-panel.tsx",
			type: "registry:component",
			target: "components/flow/nodes-panel.tsx"
		},{
			path: "src/registry/blocks/flow-routing/lib/content-creator-routing.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/ui/flow/status-edge-controller.tsx",
			type: "registry:component",
			target: "components/flow/status-edge-controller.tsx"
		},{
			path: "src/registry/ui/flow/visualize-text-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/visualize-text-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/text-input-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/text-input-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/prompt-crafter-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/prompt-crafter-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/generate-text-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/generate-text-node-controller.tsx"
		},{
			path: "src/registry/hooks/flow/use-workflow.ts",
			type: "registry:hook",
			target: ""
		},{
			path: "src/registry/lib/flow/workflow.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/workflow-execution-engine.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/sse-workflow-execution-client.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/sse-workflow-execution-engine.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/server-node-processors.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/node-factory.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/generate-ai-text.ts",
			type: "registry:lib",
			target: ""
		}],
		categories: ["flow"],
		component: React.lazy(() => import("@/registry/blocks/flow-routing/page.tsx")),
		source: "src/__registry__/blocks/flow-routing/page.tsx",
		meta: undefined,
    },	"flow-parallelization": {
		name: "flow-parallelization",
		description: "Agentic parallelization workflow.",
		type: "registry:block",
		registryDependencies: ["button","card","dialog","input","textarea","sonner","http://localhost:4567/r/generate-text-node.json","http://localhost:4567/r/prompt-crafter-node.json","http://localhost:4567/r/text-input-node.json","http://localhost:4567/r/visualize-text-node.json"],
		files: [{
			path: "src/registry/blocks/flow-parallelization/page.tsx",
			type: "registry:page",
			target: "app/workflow/page.tsx"
		},{
			path: "src/registry/blocks/flow-parallelization/route.ts",
			type: "registry:page",
			target: "app/api/workflow/execute/route.ts"
		},{
			path: "src/registry/blocks/flow-parallelization/components/nodes-panel.tsx",
			type: "registry:component",
			target: "components/flow/nodes-panel.tsx"
		},{
			path: "src/registry/blocks/flow-parallelization/lib/exam-creator-parallelization.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/ui/flow/status-edge-controller.tsx",
			type: "registry:component",
			target: "components/flow/status-edge-controller.tsx"
		},{
			path: "src/registry/ui/flow/visualize-text-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/visualize-text-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/text-input-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/text-input-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/prompt-crafter-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/prompt-crafter-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/generate-text-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/generate-text-node-controller.tsx"
		},{
			path: "src/registry/hooks/flow/use-workflow.ts",
			type: "registry:hook",
			target: ""
		},{
			path: "src/registry/lib/flow/workflow.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/workflow-execution-engine.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/sse-workflow-execution-client.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/sse-workflow-execution-engine.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/server-node-processors.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/node-factory.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/generate-ai-text.ts",
			type: "registry:lib",
			target: ""
		}],
		categories: ["flow"],
		component: React.lazy(() => import("@/registry/blocks/flow-parallelization/page.tsx")),
		source: "src/__registry__/blocks/flow-parallelization/page.tsx",
		meta: undefined,
    },	"flow-orchestrator": {
		name: "flow-orchestrator",
		description: "Agentic orchestrator workflow.",
		type: "registry:block",
		registryDependencies: ["button","card","dialog","input","textarea","sonner","http://localhost:4567/r/generate-text-node.json","http://localhost:4567/r/prompt-crafter-node.json","http://localhost:4567/r/text-input-node.json","http://localhost:4567/r/visualize-text-node.json"],
		files: [{
			path: "src/registry/blocks/flow-orchestrator/page.tsx",
			type: "registry:page",
			target: "app/workflow/page.tsx"
		},{
			path: "src/registry/blocks/flow-orchestrator/route.ts",
			type: "registry:page",
			target: "app/api/workflow/execute/route.ts"
		},{
			path: "src/registry/blocks/flow-orchestrator/components/nodes-panel.tsx",
			type: "registry:component",
			target: "components/flow/nodes-panel.tsx"
		},{
			path: "src/registry/blocks/flow-orchestrator/lib/developer-tasks-orchestrator.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/ui/flow/status-edge-controller.tsx",
			type: "registry:component",
			target: "components/flow/status-edge-controller.tsx"
		},{
			path: "src/registry/ui/flow/visualize-text-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/visualize-text-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/text-input-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/text-input-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/prompt-crafter-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/prompt-crafter-node-controller.tsx"
		},{
			path: "src/registry/ui/flow/generate-text-node-controller.tsx",
			type: "registry:component",
			target: "components/flow/generate-text-node-controller.tsx"
		},{
			path: "src/registry/hooks/flow/use-workflow.ts",
			type: "registry:hook",
			target: ""
		},{
			path: "src/registry/lib/flow/workflow.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/workflow-execution-engine.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/sse-workflow-execution-client.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/sse-workflow-execution-engine.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/server-node-processors.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/node-factory.ts",
			type: "registry:lib",
			target: ""
		},{
			path: "src/registry/lib/flow/generate-ai-text.ts",
			type: "registry:lib",
			target: ""
		}],
		categories: ["flow"],
		component: React.lazy(() => import("@/registry/blocks/flow-orchestrator/page.tsx")),
		source: "src/__registry__/blocks/flow-orchestrator/page.tsx",
		meta: undefined,
    },	"jsx-utils": {
		name: "jsx-utils",
		description: "A set of utilities for working with JSX.",
		type: "registry:lib",
		registryDependencies: undefined,
		files: [{
			path: "src/registry/lib/jsx-utils.ts",
			type: "registry:lib",
			target: ""
		}],
		categories: undefined,
		component: React.lazy(() => import("@/registry/lib/jsx-utils.ts")),
		source: "",
		meta: undefined,
    },
}
