{
  "name": "jsx-renderer",
  "type": "registry:ui",
  "description": "A component that renders JSX strings with access to tailwind, shadcn components and lucide icons.",
  "dependencies": [
    "react-jsx-parser"
  ],
  "registryDependencies": [
    "https://simple-ai.alwurts.com/registry/jsx-utils.json"
  ],
  "files": [
    {
      "path": "ui/jsx-renderer.tsx",
      "content": "import { completeJsxTag } from \"@/lib/jsx-utils\";\nimport * as React from \"react\";\nimport JsxParser from \"react-jsx-parser\";\n\ninterface JsxRendererProps extends React.HTMLAttributes<HTMLDivElement> {\n\tjsx: string;\n\tfixIncompleteJsx?: boolean;\n\tcomponents: Record<string, React.ComponentType>;\n}\n\nconst JsxRenderer = React.forwardRef<JsxParser, JsxRendererProps>(\n\t({ className, jsx, fixIncompleteJsx = true, components }, ref) => {\n\t\tconst processedJsx = React.useMemo(() => {\n\t\t\treturn fixIncompleteJsx ? completeJsxTag(jsx) : jsx;\n\t\t}, [jsx, fixIncompleteJsx]);\n\n\t\treturn (\n\t\t\t<JsxParser\n\t\t\t\tref={ref}\n\t\t\t\tclassName={className}\n\t\t\t\tjsx={processedJsx}\n\t\t\t\tcomponents={components}\n\t\t\t/>\n\t\t);\n\t},\n);\nJsxRenderer.displayName = \"JsxRenderer\";\n\nexport { JsxRenderer };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}