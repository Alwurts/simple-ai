{
	"$schema": "https://ui.shadcn.com/schema/registry-item.json",
	"name": "chat-app-01",
	"type": "registry:block",
	"description": "A simple chat application with message history and input",
	"registryDependencies": [
		"chat-input",
		"chat-message",
		"chat-message-area",
		"button",
		"card",
		"scroll-area"
	],
	"files": [
		{
			"path": "./src/registry/blocks/chat-app-01/page.tsx",
			"content": "import { ChatInterface } from \"./components/chat-interface\";\n\nexport default function ChatAppPage() {\n\treturn (\n\t\t<div className=\"container mx-auto py-8\">\n\t\t\t<div className=\"mb-8\">\n\t\t\t\t<h1 className=\"text-3xl font-bold\">Chat Application</h1>\n\t\t\t\t<p className=\"text-muted-foreground\">\n\t\t\t\t\tA simple chat interface built with Simple AI components.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<ChatInterface />\n\t\t</div>\n\t);\n}\n",
			"type": "registry:page",
			"target": "app/chat/page.tsx"
		},
		{
			"path": "./src/registry/blocks/chat-app-01/components/chat-interface.tsx",
			"content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { ChatInput } from \"@/components/ui/chat-input\";\nimport { ChatMessage } from \"@/components/ui/chat-message\";\nimport { ChatMessageArea } from \"@/components/ui/chat-message-area\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\ninterface Message {\n\tid: string;\n\tcontent: string;\n\trole: \"user\" | \"assistant\";\n\ttimestamp: Date;\n}\n\nexport function ChatInterface() {\n\tconst [messages, setMessages] = useState<Message[]>([\n\t\t{\n\t\t\tid: \"1\",\n\t\t\tcontent: \"Hello! How can I help you today?\",\n\t\t\trole: \"assistant\",\n\t\t\ttimestamp: new Date(),\n\t\t},\n\t]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst handleSendMessage = async (content: string) => {\n\t\tconst userMessage: Message = {\n\t\t\tid: Date.now().toString(),\n\t\t\tcontent,\n\t\t\trole: \"user\",\n\t\t\ttimestamp: new Date(),\n\t\t};\n\n\t\tsetMessages((prev) => [...prev, userMessage]);\n\t\tsetIsLoading(true);\n\n\t\t// Simulate AI response\n\t\tsetTimeout(() => {\n\t\t\tconst aiMessage: Message = {\n\t\t\t\tid: (Date.now() + 1).toString(),\n\t\t\t\tcontent: `Thanks for your message: \"${content}\". This is a demo response.`,\n\t\t\t\trole: \"assistant\",\n\t\t\t\ttimestamp: new Date(),\n\t\t\t};\n\t\t\tsetMessages((prev) => [...prev, aiMessage]);\n\t\t\tsetIsLoading(false);\n\t\t}, 1000);\n\t};\n\n\tconst handleClearChat = () => {\n\t\tsetMessages([\n\t\t\t{\n\t\t\t\tid: \"1\",\n\t\t\t\tcontent: \"Hello! How can I help you today?\",\n\t\t\t\trole: \"assistant\",\n\t\t\t\ttimestamp: new Date(),\n\t\t\t},\n\t\t]);\n\t};\n\n\treturn (\n\t\t<Card className=\"h-[500px] flex flex-col\">\n\t\t\t<div className=\"flex items-center justify-between p-4 border-b\">\n\t\t\t\t<h2 className=\"font-semibold\">Chat</h2>\n\t\t\t\t<Button variant=\"outline\" size=\"sm\" onClick={handleClearChat}>\n\t\t\t\t\tClear Chat\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t\t<ScrollArea className=\"flex-1 p-4\">\n\t\t\t\t<ChatMessageArea>\n\t\t\t\t\t{messages.map((message) => (\n\t\t\t\t\t\t<ChatMessage\n\t\t\t\t\t\t\tkey={message.id}\n\t\t\t\t\t\t\tmessage={message.content}\n\t\t\t\t\t\t\tisUser={message.role === \"user\"}\n\t\t\t\t\t\t\ttimestamp={message.timestamp}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t<ChatMessage\n\t\t\t\t\t\t\tmessage=\"Thinking...\"\n\t\t\t\t\t\t\tisUser={false}\n\t\t\t\t\t\t\ttimestamp={new Date()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</ChatMessageArea>\n\t\t\t</ScrollArea>\n\n\t\t\t<div className=\"p-4 border-t\">\n\t\t\t\t<ChatInput\n\t\t\t\t\tonSend={handleSendMessage}\n\t\t\t\t\tplaceholder=\"Type your message...\"\n\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Card>\n\t);\n}\n",
			"type": "registry:component"
		},
		{
			"path": "./src/registry/blocks/chat-app-01/components/message-list.tsx",
			"content": "import { ChatMessage } from \"@/components/ui/chat-message\";\n\ninterface Message {\n\tid: string;\n\tcontent: string;\n\trole: \"user\" | \"assistant\";\n\ttimestamp: Date;\n}\n\ninterface MessageListProps {\n\tmessages: Message[];\n}\n\nexport function MessageList({ messages }: MessageListProps) {\n\treturn (\n\t\t<div className=\"space-y-4\">\n\t\t\t{messages.map((message) => (\n\t\t\t\t<ChatMessage\n\t\t\t\t\tkey={message.id}\n\t\t\t\t\tmessage={message.content}\n\t\t\t\t\tisUser={message.role === \"user\"}\n\t\t\t\t\ttimestamp={message.timestamp}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n",
			"type": "registry:component"
		}
	],
	"meta": {
		"iframeHeight": "600px"
	},
	"categories": ["chat", "application"]
}
