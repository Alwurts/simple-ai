{
	"$schema": "https://ui.shadcn.com/schema/registry-item.json",
	"name": "chat-input-loading",
	"type": "registry:example",
	"files": [
		{
			"path": "./src/registry/examples/chat-input-loading.tsx",
			"content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n\tChatInput,\n\tChatInputEditor,\n\tChatInputSubmitButton,\n\tuseChatInput,\n} from \"@/registry/ui/chat-input-tip\";\n\nexport default function ChatInputLoading() {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [isStreaming, setIsStreaming] = useState(false);\n\n\tconst { value, onChange, handleSubmit } = useChatInput({\n\t\tonSubmit: () => {\n\t\t\tif (isStreaming) {\n\t\t\t\tsetIsStreaming(false);\n\t\t\t} else {\n\t\t\t\tsetIsLoading(true);\n\t\t\t\t// Simulate API call\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\tsetIsStreaming(true);\n\t\t\t\t\t// Simulate streaming response\n\t\t\t\t\tsetTimeout(() => setIsStreaming(false), 3000);\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t},\n\t});\n\n\treturn (\n\t\t<div className=\"w-full h-full flex justify-center items-center\">\n\t\t\t<div className=\"w-full max-w-md space-y-4\">\n\t\t\t\t<div className=\"text-center space-y-2\">\n\t\t\t\t\t<h3 className=\"text-lg font-semibold\">\n\t\t\t\t\t\tLoading States Demo\n\t\t\t\t\t</h3>\n\t\t\t\t\t<p className=\"text-sm text-muted-foreground\">\n\t\t\t\t\t\tTry submitting a message to see loading and streaming\n\t\t\t\t\t\tstates\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\n\t\t\t\t<ChatInput\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tisStreaming={isStreaming}\n\t\t\t\t\tonStop={() => setIsStreaming(false)}\n\t\t\t\t>\n\t\t\t\t\t<ChatInputEditor placeholder=\"Type a message...\" />\n\t\t\t\t\t<ChatInputSubmitButton />\n\t\t\t\t</ChatInput>\n\n\t\t\t\t<div className=\"flex gap-2 justify-center\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tonClick={() => setIsLoading(!isLoading)}\n\t\t\t\t\t>\n\t\t\t\t\t\tToggle Loading: {isLoading ? \"ON\" : \"OFF\"}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tonClick={() => setIsStreaming(!isStreaming)}\n\t\t\t\t\t>\n\t\t\t\t\t\tToggle Streaming: {isStreaming ? \"ON\" : \"OFF\"}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"text-center text-sm text-muted-foreground\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCurrent state:{\" \"}\n\t\t\t\t\t\t{isStreaming\n\t\t\t\t\t\t\t? \"Streaming\"\n\t\t\t\t\t\t\t: isLoading\n\t\t\t\t\t\t\t\t? \"Loading\"\n\t\t\t\t\t\t\t\t: \"Idle\"}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n",
			"type": "registry:example"
		}
	]
}
