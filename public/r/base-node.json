{
  "name": "base-node",
  "type": "registry:ui",
  "dependencies": [
    "@xyflow/react"
  ],
  "files": [
    {
      "path": "ui/flow/base-node.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport React from \"react\";\n\nexport type BaseNodeProps = React.HTMLAttributes<HTMLDivElement> & {\n\tselected?: boolean;\n\texecutionStatus?: \"idle\" | \"processing\" | \"success\" | \"error\";\n};\n\nexport const BaseNode = React.forwardRef<HTMLDivElement, BaseNodeProps>(\n\t({ className, selected, executionStatus, ...props }, ref) => (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tclassName={cn(\n\t\t\t\t\"relative rounded-md border bg-card text-card-foreground hover:ring-1 hover:ring-orange-500\",\n\t\t\t\tselected && \"border-muted-foreground shadow-lg\",\n\t\t\t\t{\n\t\t\t\t\t\"border-orange-500\": executionStatus === \"processing\",\n\t\t\t\t\t\"border-red-500\": executionStatus === \"error\",\n\t\t\t\t},\n\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t// biome-ignore lint/a11y/noNoninteractiveTabindex: <explanation>\n\t\t\ttabIndex={0}\n\t\t\t{...props}\n\t\t/>\n\t),\n);\nBaseNode.displayName = \"BaseNode\";\n",
      "type": "registry:ui",
      "target": "components/ui/flow/base-node.tsx"
    }
  ]
}