{
	"$schema": "https://ui.shadcn.com/schema/registry-item.json",
	"name": "chat-demo",
	"type": "registry:example",
	"files": [
		{
			"path": "./src/registry/examples/chat-demo.tsx",
			"content": "\"use client\";\n\nimport { type UIMessage, useChat } from \"@ai-sdk/react\";\nimport { DefaultChatTransport } from \"ai\";\nimport { FileIcon, PlusIcon } from \"lucide-react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { useTrackEvent } from \"@/lib/events\";\nimport {\n\tChatInput,\n\tChatInputEditor,\n\tChatInputGroupAddon,\n\tChatInputGroupButton,\n\tChatInputGroupText,\n\tChatInputMention,\n\tChatInputSubmitButton,\n\tcreateMentionConfig,\n\tuseChatInput,\n} from \"@/registry/ui/chat-input\";\nimport {\n\tChatMessage,\n\tChatMessageAvatar,\n\tChatMessageContent,\n} from \"@/registry/ui/chat-message\";\nimport {\n\tMessageArea,\n\tMessageAreaContent,\n\tMessageAreaScrollButton,\n} from \"@/registry/ui/message-area\";\n\ntype MemberItem = {\n\tid: string;\n\tname: string;\n\timage?: string;\n\ttype: string;\n};\n\ntype FileItem = {\n\tid: string;\n\tname: string;\n};\n\nconst members: MemberItem[] = [\n\t{ id: \"1\", name: \"Alice\", image: \"/alice.jpg\", type: \"agent\" },\n\t{ id: \"2\", name: \"Bob\", type: \"user\" },\n\t{ id: \"3\", name: \"Charlie\", image: \"/charlie.jpg\", type: \"bot\" },\n\t{ id: \"4\", name: \"Dave\", type: \"user\" },\n\t{ id: \"5\", name: \"Eve\", image: \"/eve.jpg\", type: \"bot\" },\n\t{ id: \"6\", name: \"Frank\", type: \"user\" },\n\t{ id: \"7\", name: \"Grace\", image: \"/grace.jpg\", type: \"bot\" },\n\t{ id: \"8\", name: \"Henry\", type: \"user\" },\n\t{ id: \"9\", name: \"Ivy\", image: \"/ivy.jpg\", type: \"bot\" },\n\t{ id: \"10\", name: \"Jack\", type: \"user\" },\n\t{ id: \"11\", name: \"Kate\", image: \"/kate.jpg\", type: \"bot\" },\n\t{ id: \"12\", name: \"Liam\", type: \"user\" },\n\t{ id: \"13\", name: \"Mia\", image: \"/mia.jpg\", type: \"bot\" },\n\t{ id: \"14\", name: \"Noah\", type: \"user\" },\n\t{ id: \"15\", name: \"Olivia\", image: \"/olivia.jpg\", type: \"bot\" },\n\t{ id: \"16\", name: \"Peter\", type: \"user\" },\n\t{ id: \"17\", name: \"Quinn\", image: \"/quinn.jpg\", type: \"bot\" },\n\t{ id: \"18\", name: \"Ryan\", type: \"user\" },\n\t{ id: \"19\", name: \"Sarah\", image: \"/sarah.jpg\", type: \"bot\" },\n\t{ id: \"20\", name: \"Thomas\", type: \"user\" },\n\t{ id: \"21\", name: \"Uma\", image: \"/uma.jpg\", type: \"bot\" },\n\t{ id: \"22\", name: \"Victor\", type: \"user\" },\n];\n\nconst files: FileItem[] = [\n\t{ id: \"f1\", name: \"report.pdf\" },\n\t{ id: \"f2\", name: \"image.png\" },\n\t{ id: \"f3\", name: \"notes.txt\" },\n];\n\nconst INITIAL_MESSAGES: UIMessage[] = [\n\t{\n\t\tid: \"1\",\n\t\tparts: [\n\t\t\t{\n\t\t\t\ttype: \"text\",\n\t\t\t\ttext: \"ðŸ‘‹ Welcome to Simple-AI.dev! We're your go-to library for copy-paste AI components and React Flow workflows.\",\n\t\t\t},\n\t\t],\n\t\trole: \"assistant\",\n\t},\n\t{\n\t\tid: \"2\",\n\t\tparts: [\n\t\t\t{\n\t\t\t\ttype: \"text\",\n\t\t\t\ttext: \"This chat interface you're looking at? It's just one of our many copy-paste friendly components. Built with the Vercel AI SDK, it's ready for your AI applications with features like streaming responses and seamless LLM integration.\",\n\t\t\t},\n\t\t],\n\t\trole: \"assistant\",\n\t},\n\t{\n\t\tid: \"3\",\n\t\tparts: [\n\t\t\t{\n\t\t\t\ttype: \"text\",\n\t\t\t\ttext: \"Want to explore our other components, app blocks, or AI workflow tools? Feel free to ask!\",\n\t\t\t},\n\t\t],\n\t\trole: \"assistant\",\n\t},\n];\n\nexport default function ChatDemo() {\n\tconst { messages, sendMessage, status, stop } = useChat({\n\t\ttransport: new DefaultChatTransport({\n\t\t\tapi: \"/api/ai/chat\",\n\t\t}),\n\t\tmessages: INITIAL_MESSAGES,\n\t\tonFinish: ({ message }) => {\n\t\t\t//console.log(\"onFinish\", message, completion);\n\t\t\ttrack({\n\t\t\t\tname: \"example_used\",\n\t\t\t\tproperties: {\n\t\t\t\t\tused_example: \"chat-demo\",\n\t\t\t\t\tused_example_ai_completion: JSON.stringify(\n\t\t\t\t\t\tmessage.parts,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t2,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n\n\tconst isLoading = status === \"streaming\" || status === \"submitted\";\n\n\tconst track = useTrackEvent();\n\n\tconst { value, onChange, handleSubmit, mentionConfigs } = useChatInput({\n\t\tmentions: {\n\t\t\tmember: createMentionConfig<MemberItem>({\n\t\t\t\ttype: \"member\",\n\t\t\t\ttrigger: \"@\",\n\t\t\t\titems: members,\n\t\t\t}),\n\t\t\tfile: createMentionConfig<FileItem>({\n\t\t\t\ttype: \"file\",\n\t\t\t\ttrigger: \"/\",\n\t\t\t\titems: files,\n\t\t\t}),\n\t\t},\n\t\tonSubmit: (parsedValue) => {\n\t\t\tsendMessage({\n\t\t\t\trole: \"user\",\n\t\t\t\tparts: [{ type: \"text\", text: parsedValue.content }],\n\t\t\t});\n\t\t},\n\t});\n\n\treturn (\n\t\t<div className=\"w-full\">\n\t\t\t<Card className=\"w-full max-w-xl mx-auto flex flex-col flex-1 h-[500px]\">\n\t\t\t\t<div className=\"flex-1 flex flex-col min-h-0\">\n\t\t\t\t\t<MessageArea>\n\t\t\t\t\t\t<MessageAreaContent>\n\t\t\t\t\t\t\t{messages.map((message) => {\n\t\t\t\t\t\t\t\tif (message.role !== \"user\") {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ChatMessage\n\t\t\t\t\t\t\t\t\t\t\tkey={message.id}\n\t\t\t\t\t\t\t\t\t\t\tid={message.id}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<ChatMessageAvatar />\n\t\t\t\t\t\t\t\t\t\t\t{message.parts\n\t\t\t\t\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(part) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart.type === \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t.map((part) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ChatMessageContent\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={part.type}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent={part.text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</ChatMessage>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ChatMessage\n\t\t\t\t\t\t\t\t\t\tkey={message.id}\n\t\t\t\t\t\t\t\t\t\tid={message.id}\n\t\t\t\t\t\t\t\t\t\tvariant=\"bubble\"\n\t\t\t\t\t\t\t\t\t\ttype=\"outgoing\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{message.parts\n\t\t\t\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t(part) => part.type === \"text\",\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t.map((part) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<ChatMessageContent\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={part.type}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontent={part.text}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ChatMessage>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</MessageAreaContent>\n\t\t\t\t\t\t<MessageAreaScrollButton />\n\t\t\t\t\t</MessageArea>\n\t\t\t\t\t<div className=\"border-t p-4\">\n\t\t\t\t\t\t<ChatInput\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\tisStreaming={isLoading}\n\t\t\t\t\t\t\tonStop={stop}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ChatInputMention\n\t\t\t\t\t\t\t\ttype={mentionConfigs.member.type}\n\t\t\t\t\t\t\t\ttrigger={mentionConfigs.member.trigger}\n\t\t\t\t\t\t\t\titems={mentionConfigs.member.items}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{(item) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Avatar className=\"h-6 w-6\">\n\t\t\t\t\t\t\t\t\t\t\t<AvatarImage\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.image ??\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"/placeholder.jpg\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talt={item.name}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<AvatarFallback>\n\t\t\t\t\t\t\t\t\t\t\t\t{item.name[0].toUpperCase()}\n\t\t\t\t\t\t\t\t\t\t\t</AvatarFallback>\n\t\t\t\t\t\t\t\t\t\t</Avatar>\n\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-sm font-medium truncate max-w-[120px]\"\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.name}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"ml-auto\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.type}\n\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ChatInputMention>\n\t\t\t\t\t\t\t<ChatInputMention\n\t\t\t\t\t\t\t\ttype={mentionConfigs.file.type}\n\t\t\t\t\t\t\t\ttrigger={mentionConfigs.file.trigger}\n\t\t\t\t\t\t\t\titems={mentionConfigs.file.items}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{(item) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<FileIcon className=\"h-4 w-4 text-muted-foreground\" />\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-sm font-medium truncate max-w-[200px]\"\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.name}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ChatInputMention>\n\t\t\t\t\t\t\t<ChatInputEditor placeholder=\"Type @ for agents, / for files...\" />\n\t\t\t\t\t\t\t<ChatInputGroupAddon align=\"block-end\">\n\t\t\t\t\t\t\t\t<ChatInputGroupButton\n\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\tclassName=\"rounded-full\"\n\t\t\t\t\t\t\t\t\tsize=\"icon-sm\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<PlusIcon />\n\t\t\t\t\t\t\t\t</ChatInputGroupButton>\n\t\t\t\t\t\t\t\t<ChatInputGroupText className=\"ml-auto\">\n\t\t\t\t\t\t\t\t\t52% used\n\t\t\t\t\t\t\t\t</ChatInputGroupText>\n\t\t\t\t\t\t\t\t<Separator\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclassName=\"!h-6\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ChatInputSubmitButton />\n\t\t\t\t\t\t\t</ChatInputGroupAddon>\n\t\t\t\t\t\t</ChatInput>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n",
			"type": "registry:example"
		}
	]
}
